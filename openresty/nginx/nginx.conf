worker_processes auto;

env JWT_SECRET_KEY;

error_log logs/error.log error;

events {
    worker_connections 1024;
}
http {
    
    lua_shared_dict jwt_cache 10m;
    sendfile on;
    default_type application/octet-stream;

    server {
        listen 123;

        access_by_lua_block {
            local jwt = require "resty.jwt"
            local jwt_token = ngx.var.http_Authorization

            if not jwt_token then
                ngx.status = ngx.HTTP_UNAUTHORIZED
                ngx.say("Missing token")
                return ngx.exit(ngx.HTTP_UNAUTHORIZED)
            end

            local auth_header_prefix = "Bearer "
            if not jwt_token:find(auth_header_prefix, 1, true) then
                ngx.status = ngx.HTTP_UNAUTHORIZED
                ngx.say("Invalid token")
                return ngx.exit(ngx.HTTP_UNAUTHORIZED)
            end

            jwt_token = jwt_token:sub(auth_header_prefix:len() + 1)
            local jwt_obj = jwt:verify(os.getenv("JWT_SECRET_KEY"), jwt_token)

            if not jwt_obj.verified then
                ngx.status = ngx.HTTP_UNAUTHORIZED
                ngx.say("Invalid token")
                return ngx.exit(ngx.HTTP_UNAUTHORIZED)
            end

            ngx.log(ngx.INFO, "User authenticated: " .. jwt_obj.payload.id)
        }

        location /storage/ {
            proxy_pass http://garage:3902/;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host tsap-tsarap-bucket.garage:3902;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header Access-Control-Allow-Origin 'http://localhost:3001' always;
            add_header Access-Control-Allow-Credentials true always;

            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin 'http://localhost:3001' always;
                add_header Access-Control-Allow-Methods 'GET, OPTIONS';
                add_header Access-Control-Allow-Credentials true always;

                add_header Access-Control-Allow-Headers 'Authorization';
                return 204;
            }
        }
    }
}
